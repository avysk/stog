Next release:
  * add: <elements> node handle reverse="false" attribute not to
    reverse order of elements (which is default, i.e. the more recent first)

Release 0.5:
  * minor fixes (thanks to Gabriel Scherer)
  * better error and warning messages (thanks to Gabriel Scherer)
  * handle prefix in all xml nodes and attributes (upgrade to Xtmpl 0.5)
  * global definitions now are of the form stog:foo
  * add: module system
  * add: new caching system, available for plugins too
  * add: Stog_plug.plugin_config_file
  * add: Stog_plug.register_level_fun_on_elt_list to register functions
    handling all elements at a time.
  * fix: add '.' after counters in section title
  * add: when a basic template is missing, create one and issue a warning;
    these templates are: page.tmpl, elt-in-list.tmpl, by-keyword.tmpl,
    by-topic.tmpl, keyword.tmpl, topic.tmpl, by-month.tmpl.

Release 0.4:
  * use separate tool to evaluate ocaml code; this allows to use native
    code version of stog even when evaluating ocaml code; also allow
    to use distinct ocaml toplevels in ocaml-eval (with session="...")
  * add simple cache system
  * new <inc> rule
  * ability to define "functions", with elt paremeters having attributes
  * sectionning now uses blocks and counters
  * handle blocks and counters (from stog_writing)
  * veritfy references to blocks by id (sections, ...) and use their title in links
  * now use "id" attribute instead of "name" attribute in sectionning tags
  * define and use levels of rules; plugins can extend the number of levels
    to define their own rewrite system
  * handle relative paths in include, when starting with . or ..

Release 0.3
  * new stage 0 to allow plugins to change the stog structure before generating
  * new fields elt_xml_doctype, elt_out
  * handle doctype attribute in element description
  * define and use stage1 and stage2 functions for plugins
  * more .mlis file and comments in the library
    